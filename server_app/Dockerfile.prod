# Start from the latest golang base image
FROM golang:1.22-alpine AS builder

# Add Maintainer info
LABEL maintainer="contact@charlesparames.fr"

# Install git and other dependencies.
RUN apk update && apk add --no-cache git build-base

# Install swag
RUN go install github.com/swaggo/swag/cmd/swag@latest

# Set the current working directory inside the container 
WORKDIR /app

# Copy go mod and sum files 
COPY src/go.mod src/go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed 
RUN go mod download

# Copy the source from the current directory to the working Directory inside the container 
COPY ./src .

# Generate Swagger docs
RUN swag init -g api/app.go --output ./api/docs

# Build the Go app
RUN CGO_ENABLED=0 GOOS=linux go build -o main .

# Start a new stage from scratch
FROM alpine:latest
RUN apk --no-cache add ca-certificates

WORKDIR /opt/gofiber-app

# Copy the Pre-built binary file from the previous stage
COPY --from=builder /app/main .

# Expose port 80
EXPOSE 80

# Command to run the executable
CMD ["./main"]
