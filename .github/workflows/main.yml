name: Build and Publish Docker Image

on:
  push:
    branches:
      - main  # Change this to the branch you want to trigger the workflow on
    paths-ignore:
      - 'infra/environments/prod/ivoirejobs-api/.argocd-source-ivoirejobs-api.yaml'
      - 'front_app/**'
      - 'server_app/src/api/build/**'
      - '.github/workflows/**'

jobs:
  build_and_publish_docker_image:
    runs-on: ubuntu-latest

    env:
      APP_HOST: ${{ secrets.APP_HOST }}
      APP_PORT: ${{ secrets.APP_PORT }}
      JWT_ACCESS_SIGN_KEY: ${{ secrets.JWT_ACCESS_SIGN_KEY }}
      JWT_REFRESH_SIGN_KEY: ${{ secrets.JWT_REFRESH_SIGN_KEY }}
      JWT_ISSUER: ${{ secrets.JWT_ISSUER }}
      POSTMARK_SERVER_TOKEN: ${{ secrets.POSTMARK_SERVER_TOKEN }}
      POSTMARK_ACCOUNT_TOKEN: ${{ secrets.POSTMARK_ACCOUNT_TOKEN }}
      EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
      FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
      DB_URL: ${{ secrets.DB_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get the latest Docker image tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(curl -s "https://registry.hub.docker.com/v2/repositories/popokola/ivoirejobs-api/tags" | jq -r '.results[].name' | grep -E '^v0\.1\.[0-9]+$' | sort -rV | head -n 1)
          CURRENT_X=${LATEST_TAG#v0.1.}
          NEW_X=$((CURRENT_X + 1))
          echo "::set-output name=NEW_TAG::v0.1.$NEW_X"

      - name: Generate .env File
        run: |
          echo "APP_HOST=${{ secrets.APP_HOST }}" >> ./server_app/src/.env
          echo "JWT_ACCESS_SIGN_KEY=${{ secrets.JWT_ACCESS_SIGN_KEY }}" >> ./server_app/src/.env
          echo "JWT_REFRESH_SIGN_KEY=${{ secrets.JWT_REFRESH_SIGN_KEY }}" >> ./server_app/src/.env
          echo "JWT_ISSUER=${{ secrets.JWT_ISSUER }}" >> ./server_app/src/.env
          echo "POSTMARK_SERVER_TOKEN=${{ secrets.POSTMARK_SERVER_TOKEN }}" >> ./server_app/src/.env
          echo "POSTMARK_ACCOUNT_TOKEN=${{ secrets.POSTMARK_ACCOUNT_TOKEN }}" >> ./server_app/src/.env
          echo "EMAIL_FROM=${{ secrets.EMAIL_FROM }}" >> ./server_app/src/.env
          echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" >> ./server_app/src/.env
          echo "DB_URL=${{ secrets.DB_URL }}" >> ./server_app/src/.env
          echo "S3_REGION=${{ secrets.S3_REGION }}" >> ./server_app/src/.env
          echo "S3_BUCKET=${{ secrets.S3_BUCKET }}" >> ./server_app/src/.env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ./server_app/src/.env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ./server_app/src/.env
          echo "STRIPE_PUBLISHABLE_KEY=${{ secrets.STRIPE_PUBLISHABLE_KEY }}" >> ./server_app/src/.env
          echo "STRIPE_PRIVATE_KEY=${{ secrets.STRIPE_PRIVATE_KEY }}" >> ./server_app/src/.env
          echo "STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}" >> ./server_app/src/.env
          echo "FCM_TYPE=${{ secrets.FCM_TYPE }}" >> ./server_app/src/.env
          echo "FCM_PROJECT_ID=${{ secrets.FCM_PROJECT_ID }}" >> ./server_app/src/.env
          echo "FCM_PRIVATE_KEY_ID=${{ secrets.FCM_PRIVATE_KEY_ID }}" >> ./server_app/src/.env
          echo "FCM_CLIENT_EMAIL=${{ secrets.FCM_CLIENT_EMAIL }}" >> ./server_app/src/.env
          echo "FCM_CLIENT_ID=${{ secrets.FCM_CLIENT_ID }}" >> ./server_app/src/.env
          echo "FCM_AUTH_URI=${{ secrets.FCM_AUTH_URI }}" >> ./server_app/src/.env
          echo "FCM_TOKEN_URI=${{ secrets.FCM_TOKEN_URI }}" >> ./server_app/src/.env
          echo "FCM_AUTH_PROVIDER_X509_CERT_URL=${{ secrets.FCM_AUTH_PROVIDER_X509_CERT_URL }}" >> ./server_app/src/.env
          echo "FCM_CLIENT_X509_CERT_URL=${{ secrets.FCM_CLIENT_X509_CERT_URL }}" >> ./server_app/src/.env
          echo "FCM_PRIVATE_KEY=${{ secrets.FCM_PRIVATE_KEY }}" >> ./server_app/src/.env
          echo "FCM_UNIVERSE_DOMAIN=${{ secrets.FCM_UNIVERSE_DOMAIN }}" >> ./server_app/src/.env



      - name: Build and push Docker image for ivoirejobs-api
        uses: docker/build-push-action@v2
        with:
          context: ./server_app/
          file: ./server_app/Dockerfile.prod
          push: true
          tags: popokola/ivoirejobs-api:${{ steps.get_latest_tag.outputs.NEW_TAG }}



